# showcase maps with several examples

import "prelude.eg"
import "map.eg"

using System
using Map


def test_is_empty =
    [ M -> print "is_empty: " (is_empty M) "\n" ]

def test_size =
    [ M S -> print "size = " (size M) " eq " ((size M) == S) "\n" ]

# test empty

def test_empty =
    test_is_empty empty;
    test_size empty 0

# test singleton

def singleton =
    [ K V -> insert K V empty]

def test_nth =
    [ M K V -> print K " -> " (nth M K) " eq " ((nth M K) == V) "\n" ]

def test_singleton =
    let S = singleton 0 1 in 
    test_is_empty S;
    test_size S 1;
    test_nth S 0 1

# create a list of tuples

def inc_list = List::map [N -> (N,N+1)] (List::from_to 1 9)

def inc_map = from_list inc_list

def test_size0 =
    [ M -> (size M) == (List::length (to_list M)) ]

def print_map =
    [ M -> print "map: " (to_list M) "\n" ]

def test_map =
    let M = inc_map in
    print_map M;
    test_is_empty M;
    test_size M 9;
    test_nth M 1 2;
    test_nth M 3 4;
    test_nth M 9 10;
    print_map (delete 3 (delete 7 M))
    

def main =
    test_empty;
    test_singleton;
    test_map
