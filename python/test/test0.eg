# Egel-Python3 bridge tests

import "prelude.eg"
import "python3.ego"

using System
using Python
using List

val python3 = run none

def one_on_one =
    [ E -> 
         print "egel " E ", ";
         let O0 = to_object E in
         let O1 = from_object O0 in
         print "bridged " O1 ", ";
         let EQ = (E == O1) in
         print "eq " EQ ".\n";
         EQ ]

def test0 =
    map one_on_one {none, false, true, 7, 3.14, 'a', "text"}

def tuple_map =
    [ F tuple           -> tuple
    | F (tuple X)       -> tuple (F X)
    | F (X, Y)          -> (F X, F Y)
    | F (X, Y, Z)       -> (F X, F Y, F Z)
    | F (X, Y, Z, A)    -> (F X, F Y, F Y, F A)
    | F _               -> throw "tuple_map falure" ]

def tuple_on_tuple =
    [ E -> 
         print "egel " E ", ";
         let O0 = to_tuple (tuple_map to_object E) in
         let O1 = tuple_map (from_object) (from_tuple O0) in
         print "bridged " O1 ", ";
         let EQ = (E == O1) in
         print "eq " EQ ".\n";
         EQ ]

def test1 =
    map tuple_on_tuple {tuple, tuple 0, (true, 0)}

def main =
    test0;
    test1;
    none
