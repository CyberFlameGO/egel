/*
 * There are several manners in which you can try to emulate object
 * orientation (OO) in Egel. This is one manner.
 *
 * An object is a record of mutable fields.
 *
 * This is implemented pretty wastefully at the moment, an object
 * is syntactic sugar for a data record which holds named fields.
 * Lookup is O(c*n) with n the number of fields and c a large 
 * constant.
 *
 * That should become better once the runtime is overhauled.
 */
import "prelude.eg"

using System

// examples of a box and a circle class.
object box W H (
    data width, W
    data height, H

    def resize =
        [ SELF, W, H ->
             Z = set_field SELF width W; 
                set_field SELF height H ]

    def area =
        [ SELF ->
            ((get_field SELF width) * (get_field SELF height)) ]
)

object circle R (
    data radius, R

    def area =
        [ SELF -> 
            RR = tofloat(get_field SELF radius);
                R*R*Math.pi ]
)
    
def main =
    B = box 4 5;
    AREA0 = B @@ area;
    N = (B @@ resize) 2 3;
    AREA1 = B @@ area;
        (AREA0, AREA1)

