/*
 * Inheritance is for the moment implemented with the extend
 * combinator.
 *
 * 'extend OBJECT0 OBJECT1' creates an object which is the union of
 * fields of OBJECT0 overwritten by OBJECT1.
 *
 * The extends keyword is syntactic sugar for using that 
 * combinator.
 */
import "prelude.eg"

using System

class place X Y (
    data row, X
    data column, Y

    def move =
        [ SELF X Y ->
            let Z = set SELF row X in
                set SELF column Y ]
)

class box W H extends place W 3 with (
    data width, W
    data height, H

    def resize =
        [ SELF W H ->
             let _ = set SELF width W in
                set SELF height H ]

    def area =
        [ SELF ->
            ((get SELF width) * (get SELF height)) ]
)

// make a placeable box.
def main =
    let B = box 4 5 in
    let U = (B @@ move) 2 3 in
    B
