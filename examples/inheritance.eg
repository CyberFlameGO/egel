/*
 * There are several manners in which you can try to emulate object
 * orientation (OO) in Egel. This is one manner.
 *
 * An object is a record of mutable fields.
 *
 * This is implemented pretty wastefully at the moment, an object
 * is syntactic sugar for a data record which holds named fields.
 * Lookup is O(c*n) with n the number of fields and c a large 
 * constant.
 *
 * That should become better once the runtime is overhauled.
 */
import "prelude.eg"

using System

// examples of a box and a circle class.
object place X Y (
    data row, X
    data column, Y

    def move =
        [ SELF, X, Y ->
            Z = set SELF row X;
                set SELF column Y ]
)

object box W H (
    data width, W
    data height, H

    def resize =
        [ SELF, W, H ->
             Z = set SELF width W; 
                set SELF height H ]

    def area =
        [ SELF ->
            ((get SELF width) * (get SELF height)) ]
)

object circle R (
    data radius, R

    def area =
        [ SELF -> 
            RR = tofloat(get SELF radius);
                R*R*Math.pi ]
)
    
def main =
    B = extend (place 0 1) (box 4 5);
    U = (B @@ move) 2 3;
    B

